@model IEnumerable<CmsShoppingCart.Models.ViewModels.Shop.ShopCategoriesVM>

@{
    ViewBag.Title = "Shop Categories";
}

<h3>Shop Categories</h3>

<div class="NewCategoryDiv">
    <input type="text" id="NewCategoryInput" />
    <p>
        <a href="#" class="NewCategoryAnchor">Add a new category</a>
        <span class="NewCategorySpan">
            <img src="~/Content/Pictures/ajax-loader.gif" />
        </span>
    </p>
</div>
@if (!Model.Any())
{
    <h1 class="text-center"> There are no categories</h1>


}
else
{



    @*<p>
            @Html.ActionLink("Add a New Category", "Add")
        </p>*@
    <table class="table sorting" id="Pages">
        <tr class="home">
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr id="id_@item.Id">
                <td>
                    <div class="NewCategoryNameChangedNotifier"></div>
                    @Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "form-control", @readonly ="readonly" } })
                </td>

                <td>
                    @Html.ActionLink("Delete Category", "DeleteCategory", new { id = item.Id }, new { @class = "delete" })
                </td>
            </tr>
        }

    </table>
}@section Keyassemahe {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script>
        /*
         * Functionality to add and retrieve a category without refreshing the page
         */
        $(function () {



            var NewCategoryInput = $("#NewCategoryInput");
            var NewCategoryAnchor = $(".NewCategoryAnchor");
            var NewCategorySpan = $(".NewCategorySpan");
            var table = $("table#Pages tbody");

            NewCategoryInput.keyup(function (e) {

                if (e.keyCode == 13) {
                    NewCategoryAnchor.click();
                }
            });

            NewCategoryAnchor.click(function (e) {

                e.preventDefault();



                var NewCategoryInputValue = NewCategoryInput.val();

                if (NewCategoryInputValue.length < 3) {
                    alert("The category name must be a least 3 character long");
                    return false;
                }

                NewCategorySpan.show();
                var url = "/Admin/Shop/AddNewCatedory";
                $.post(url, { NewCategoryInputValue: NewCategoryInputValue }, function (data) {
                    var returnVal = data.trim();

                    if (returnVal == "titletaken") {

                        NewCategorySpan.html("<span class='alert alert-danger'>That category is taken<span>")
                        setTimeout(function () {
                            NewCategorySpan.fadeOut("slow", function () {

                                NewCategorySpan.html("img scr=/Content/Pictures/ajax-loader.gif");
                            });
                        }, 4000);

                    }
                    else {
                        if (!$("table#Pages tbody").length) {
                            location.reload();
                        }
                        else {
                            NewCategorySpan.html("<span class='alert alert-success'>The categoy was added successfully<span>")
                            setTimeout(function () {
                                NewCategorySpan.fadeOut("slow", function () {

                                    NewCategorySpan.html("img scr=/Content/Pictures/ajax-loader.gif");
                                });
                            }, 4000);

                            NewCategoryInput.val("");

                            var TableRowCopier = $("table#Pages tbody tr:last").clone();
                            TableRowCopier.attr("id", "id_" + data);
                            TableRowCopier.find("#item_Name").val(NewCategoryInputValue);
                            TableRowCopier.find("a.delete").attr("href",  "/Admin/Shop/DeleteCategory/");
                            table.append(TableRowCopier);
                            //table.sortable("refresh");
                        }




                    }


                });
            });
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            /*
             * adding drag and drop functionalities
             */

            $("table#Pages tbody").sortable({
                items: "tr:not(.home)",
                placeholder: "ui-state-highlight",
                update: function () {
                    var ids = $("table#Pages tbody").sortable("serialize");
                    var url = "/Admin/Shop/ReoraganizeCategory/";
                    $.post(url, ids, function (data) {

                    });
                }

            });

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

            /*
             * Adding delete functionality 
             */
            $("table#Pages tbody").on("click", "a.delete", function () {
                if (!confirm("Are you sure you want to delete this category?")) return false;
              
            });
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            /*
             *Adding pages Category Edition functionality 
             */
            //1 what to do on a double click
            var OriginalValue;
            $("table#Pages input.text-box").dblclick(function () {

                OriginalValue = $(this).val();
                $(this).attr("readonly", false)
            });
            // 2 what to do when the enter key is pressed 
            $("table#Pages tbody input.text-box").keyup(function (e) {
                if (e.keycode == 13) {
                    $(this).blur(); 
                }
            });

            $("table#Pages tbody input.text-box").blur(function () {
                var $this = $(this);
                var CategoryInputValue = $(this).val();
                var Notifier = $this.parent().find(".NewCategoryNameChangedNotifier");
                var IdOftheRow = $this.parent().parent().attr("id").substring(3);
                if (CategoryInputValue.length < 3) {
                    alert("The category name cannot have less than 3 character");
                    return false;
                }
                var url = "/Admin/Shop/UpdateCategory";
                $.post(url, { CategoryInputValue: CategoryInputValue, IdOftheRow: IdOftheRow }, function (data) {

                    var ReturnVal = data.trim();
                    if (ReturnVal == "titletaken") {
                        Notifier.html("<span class='alert alert-danger'> That title already exist<span>")
                        setTimeout(function () {
                            Notifier.fadeOut("slow", function () {

                            });
                        }, 3000);
                    } else {
                         Notifier.html("<span class='alert alert-success'>You changed the category name successfully!<span>")
                            setTimeout(function () {
                            Notifier.fadeOut("slow", function () {

                            });
                        }, 3000);
                    } 

                }).done(function () {
                    $this.attr("readonly", true);
                });
                 
            });

        });


    </script>
}